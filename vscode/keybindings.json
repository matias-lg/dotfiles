// Place your key bindings in this file to override the defaultsauto[]
[

  // TERMINAL: enabled when terminal is open and we are focusing it
  {
    "key": "shift+t",
    "command": "workbench.action.togglePanel",
    "when": "terminal.active && terminalFocus"
  },
  {
    "key": "shift+n",
    "command": "workbench.action.terminal.new",
    "when": "terminal.active && terminalFocus"
  },

  {
    "key": "shift+o",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminal.active && terminalFocus"
  },
  {
    "key": "shift+p",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminal.active && terminalFocus"
  },
  // FILE TREE
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },



  // Navigate with hjkl when not in insert mode
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "vim.mode != 'Insert'"
  },
  // Autocomplete navigation with TAB
  {
    "key": "tab",
    "command": "selectNextQuickFix",
    "when": "editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevQuickFix",
    "when": "editorFocus && quickFixWidgetVisible"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  }
]
